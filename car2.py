import sys
import random
import pygame
from pygame.locals import *
import math

class projectile(object):
    def __init__(self,speed,lane,color):
        self.x = 50 + lane * 160
        self.y = -100
        self.speed = speed
        self.lane = lane
        self.color = color
        self.angle = 180
    
    def draw(self):
        pygame.draw.circle(screen, (0,0,0), (self.x,self.y), self.speed)
        pygame.draw.polygon(screen, (0,0,0), [(1.63 * size * math.sin(math.radians(self.angle+34)) + self.x,1.63 * size * math.cos(math.radians(self.angle+34)) + self.y),(1.25 * size * math.sin(math.radians(self.angle+47)) + self.x,1.25 * size * math.cos(math.radians(self.angle+47)) + self.y),(1.13 * size * math.sin(math.radians(self.angle+41)) + self.x,1.13 * size * math.cos(math.radians(self.angle+41)) + self.y),(1.53 * size * math.sin(math.radians(self.angle+28)) + self.x,1.53 * size * math.cos(math.radians(self.angle+28)) + self.y)])
        pygame.draw.polygon(screen, (0,0,0), [(1.63 * size * math.sin(math.radians(self.angle-34)) + self.x,1.63 * size * math.cos(math.radians(self.angle-34)) + self.y),(1.25 * size * math.sin(math.radians(self.angle-47)) + self.x,1.25 * size * math.cos(math.radians(self.angle-47)) + self.y),(1.13 * size * math.sin(math.radians(self.angle-41)) + self.x,1.13 * size * math.cos(math.radians(self.angle-41)) + self.y),(1.53 * size * math.sin(math.radians(self.angle-28)) + self.x,1.53 * size * math.cos(math.radians(self.angle-28)) + self.y)])
        pygame.draw.polygon(screen, (0,0,0), [(1.25 * size * math.sin(math.radians(self.angle+133)) + self.x,1.25 * size * math.cos(math.radians(self.angle+133)) + self.y),(1.63 * size * math.sin(math.radians(self.angle+146)) + self.x,1.63 * size * math.cos(math.radians(self.angle+146)) + self.y),(1.56 * size * math.sin(math.radians(self.angle+150)) + self.x,1.56 * size * math.cos(math.radians(self.angle+150)) + self.y),(1.15 * size * math.sin(math.radians(self.angle+138)) + self.x,1.15 * size * math.cos(math.radians(self.angle+138)) + self.y)])
        pygame.draw.polygon(screen, (0,0,0), [(1.25 * size * math.sin(math.radians(self.angle-133)) + self.x,1.25 * size * math.cos(math.radians(self.angle-133)) + self.y),(1.63 * size * math.sin(math.radians(self.angle-146)) + self.x,1.63 * size * math.cos(math.radians(self.angle-146)) + self.y),(1.56 * size * math.sin(math.radians(self.angle-150)) + self.x,1.56 * size * math.cos(math.radians(self.angle-150)) + self.y),(1.15 * size * math.sin(math.radians(self.angle-138)) + self.x,1.15 * size * math.cos(math.radians(self.angle-138)) + self.y)])
        pygame.draw.polygon(screen, self.color, [(2 * size * math.sin(math.radians(self.angle)) + self.x, 2 * size * math.cos(math.radians(self.angle)) + self.y),(2 * size * math.sin(math.radians(self.angle+2)) + self.x, 2 * size * math.cos(math.radians(self.angle+2)) + self.y),(2 * size * math.sin(math.radians(self.angle+4)) + self.x, 2 * size * math.cos(math.radians(self.angle+4)) + self.y),(2 * size * math.sin(math.radians(self.angle+6)) + self.x, 2 * size * math.cos(math.radians(self.angle+6)) + self.y),(2 * size * math.sin(math.radians(self.angle+8)) + self.x, 2 * size * math.cos(math.radians(self.angle+8)) + self.y),(2 * size * math.sin(math.radians(self.angle+10)) + self.x, 2 * size * math.cos(math.radians(self.angle+10)) + self.y),(2 * size * math.sin(math.radians(self.angle+12)) + self.x, 2 * size * math.cos(math.radians(self.angle+12)) + self.y),(2 * size * math.sin(math.radians(self.angle+14)) + self.x, 2 * size * math.cos(math.radians(self.angle+14)) + self.y),(2 * size * math.sin(math.radians(self.angle+16)) + self.x, 2 * size * math.cos(math.radians(self.angle+16)) + self.y),(2 * size * math.sin(math.radians(self.angle+18)) + self.x, 2 * size * math.cos(math.radians(self.angle+18)) + self.y),(1.9 * size * math.sin(math.radians(self.angle+23)) + self.x, 1.9 * size * math.cos(math.radians(self.angle+23)) + self.y),(1.8 * size * math.sin(math.radians(self.angle+27)) + self.x, 1.8 * size * math.cos(math.radians(self.angle+27)) + self.y),(1.7 * size * math.sin(math.radians(self.angle+30)) + self.x, 1.7 * size * math.cos(math.radians(self.angle+30)) + self.y),(1.67 * size * math.sin(math.radians(self.angle+31)) + self.x, 1.67 * size * math.cos(math.radians(self.angle+31)) + self.y),(1.64 * size * math.sin(math.radians(self.angle+30)) + self.x, 1.64 * size * math.cos(math.radians(self.angle+30)) + self.y),(1.6 * size * math.sin(math.radians(self.angle+32)) + self.x, 1.6 * size * math.cos(math.radians(self.angle+32)) + self.y),(1.54 * size * math.sin(math.radians(self.angle+34)) + self.x, 1.54 * size * math.cos(math.radians(self.angle+34)) + self.y),(1.48 * size * math.sin(math.radians(self.angle+36)) + self.x, 1.48 * size * math.cos(math.radians(self.angle+36)) + self.y),(1.42 * size * math.sin(math.radians(self.angle+38)) + self.x, 1.42 * size * math.cos(math.radians(self.angle+38)) + self.y),(1.36 * size * math.sin(math.radians(self.angle+40)) + self.x, 1.36 * size * math.cos(math.radians(self.angle+40)) + self.y),(1.3 * size * math.sin(math.radians(self.angle+42)) + self.x, 1.3 * size * math.cos(math.radians(self.angle+42)) + self.y),(1.24 * size * math.sin(math.radians(self.angle+44)) + self.x, 1.24 * size * math.cos(math.radians(self.angle+44)) + self.y),(1.2 * size * math.sin(math.radians(self.angle+45)) + self.x, 1.2 * size * math.cos(math.radians(self.angle+45)) + self.y),(1.1 * size * math.sin(math.radians(self.angle+50)) + self.x, 1.1 * size * math.cos(math.radians(self.angle+50)) + self.y),(1.08 * size * math.sin(math.radians(self.angle+50)) + self.x, 1.08 * size * math.cos(math.radians(self.angle+50)) + self.y),(1.02 * size * math.sin(math.radians(self.angle+54)) + self.x, 1.02 * size * math.cos(math.radians(self.angle+54)) + self.y),(.83 * size * math.sin(math.radians(self.angle+82)) + self.x, .83 * size * math.cos(math.radians(self.angle+82)) + self.y),(.83 * size * math.sin(math.radians(self.angle+98)) + self.x, .83 * size * math.cos(math.radians(self.angle+98)) + self.y),(1.11 * size * math.sin(math.radians(self.angle+130)) + self.x, 1.11 * size * math.cos(math.radians(self.angle+130)) + self.y),(1.17 * size * math.sin(math.radians(self.angle+132)) + self.x, 1.17 * size * math.cos(math.radians(self.angle+132)) + self.y),(1.14 * size * math.sin(math.radians(self.angle+133)) + self.x, 1.14 * size * math.cos(math.radians(self.angle+133)) + self.y),(1.21 * size * math.sin(math.radians(self.angle+135)) + self.x, 1.21 * size * math.cos(math.radians(self.angle+135)) + self.y),(1.27 * size * math.sin(math.radians(self.angle+137)) + self.x, 1.27 * size * math.cos(math.radians(self.angle+137)) + self.y),(1.33 * size * math.sin(math.radians(self.angle+139)) + self.x, 1.33 * size * math.cos(math.radians(self.angle+139)) + self.y),(1.39 * size * math.sin(math.radians(self.angle+141)) + self.x, 1.39 * size * math.cos(math.radians(self.angle+141)) + self.y),(1.46 * size * math.sin(math.radians(self.angle+143)) + self.x, 1.46 * size * math.cos(math.radians(self.angle+143)) + self.y),(1.52 * size * math.sin(math.radians(self.angle+145)) + self.x, 1.52 * size * math.cos(math.radians(self.angle+145)) + self.y),(1.58 * size * math.sin(math.radians(self.angle+147)) + self.x, 1.58 * size * math.cos(math.radians(self.angle+147)) + self.y),(1.64 * size * math.sin(math.radians(self.angle+149)) + self.x, 1.64 * size * math.cos(math.radians(self.angle+149)) + self.y),(1.67 * size * math.sin(math.radians(self.angle+150)) + self.x, 1.67 * size * math.cos(math.radians(self.angle+150)) + self.y),(1.69 * size * math.sin(math.radians(self.angle+149)) + self.x, 1.69 * size * math.cos(math.radians(self.angle+149)) + self.y),(1.81 * size * math.sin(math.radians(self.angle+153)) + self.x, 1.81 * size * math.cos(math.radians(self.angle+153)) + self.y),(1.98 * size * math.sin(math.radians(self.angle+158)) + self.x, 1.98 * size * math.cos(math.radians(self.angle+158)) + self.y),(2.02 * size * math.sin(math.radians(self.angle+159)) + self.x, 2.02 * size * math.cos(math.radians(self.angle+159)) + self.y),(2.04 * size * math.sin(math.radians(self.angle+160)) + self.x, 2.04 * size * math.cos(math.radians(self.angle+160)) + self.y),(2.06 * size * math.sin(math.radians(self.angle+162)) + self.x, 2.06 * size * math.cos(math.radians(self.angle+162)) + self.y),(2.03 * size * math.sin(math.radians(self.angle+168)) + self.x, 2.03 * size * math.cos(math.radians(self.angle+168)) + self.y),(2 * size * math.sin(math.radians(self.angle+180)) + self.x, 2 * size * math.cos(math.radians(self.angle+180)) + self.y),(2 * size * math.sin(math.radians(self.angle)) + self.x, 2 * size * math.cos(math.radians(self.angle)) + self.y),(2 * size * math.sin(math.radians(self.angle-2)) + self.x, 2 * size * math.cos(math.radians(self.angle-2)) + self.y),(2 * size * math.sin(math.radians(self.angle-4)) + self.x, 2 * size * math.cos(math.radians(self.angle-4)) + self.y),(2 * size * math.sin(math.radians(self.angle-6)) + self.x, 2 * size * math.cos(math.radians(self.angle-6)) + self.y),(2 * size * math.sin(math.radians(self.angle-8)) + self.x, 2 * size * math.cos(math.radians(self.angle-8)) + self.y),(2 * size * math.sin(math.radians(self.angle-10)) + self.x, 2 * size * math.cos(math.radians(self.angle-10)) + self.y),(2 * size * math.sin(math.radians(self.angle-12)) + self.x, 2 * size * math.cos(math.radians(self.angle-12)) + self.y),(2 * size * math.sin(math.radians(self.angle-14)) + self.x, 2 * size * math.cos(math.radians(self.angle-14)) + self.y),(2 * size * math.sin(math.radians(self.angle-16)) + self.x, 2 * size * math.cos(math.radians(self.angle-16)) + self.y),(2 * size * math.sin(math.radians(self.angle-18)) + self.x, 2 * size * math.cos(math.radians(self.angle-18)) + self.y),(1.9 * size * math.sin(math.radians(self.angle-23)) + self.x, 1.9 * size * math.cos(math.radians(self.angle-23)) + self.y),(1.8 * size * math.sin(math.radians(self.angle-27)) + self.x, 1.8 * size * math.cos(math.radians(self.angle-27)) + self.y),(1.7 * size * math.sin(math.radians(self.angle-30)) + self.x, 1.7 * size * math.cos(math.radians(self.angle-30)) + self.y),(1.67 * size * math.sin(math.radians(self.angle-31)) + self.x, 1.67 * size * math.cos(math.radians(self.angle-31)) + self.y),(1.64 * size * math.sin(math.radians(self.angle-30)) + self.x, 1.64 * size * math.cos(math.radians(self.angle-30)) + self.y),(1.6 * size * math.sin(math.radians(self.angle-32)) + self.x, 1.6 * size * math.cos(math.radians(self.angle-32)) + self.y),(1.54 * size * math.sin(math.radians(self.angle-34)) + self.x, 1.54 * size * math.cos(math.radians(self.angle-34)) + self.y),(1.48 * size * math.sin(math.radians(self.angle-36)) + self.x, 1.48 * size * math.cos(math.radians(self.angle-36)) + self.y),(1.42 * size * math.sin(math.radians(self.angle-38)) + self.x, 1.42 * size * math.cos(math.radians(self.angle-38)) + self.y),(1.36 * size * math.sin(math.radians(self.angle-40)) + self.x, 1.36 * size * math.cos(math.radians(self.angle-40)) + self.y),(1.3 * size * math.sin(math.radians(self.angle-42)) + self.x, 1.3 * size * math.cos(math.radians(self.angle-42)) + self.y),(1.24 * size * math.sin(math.radians(self.angle-44)) + self.x, 1.24 * size * math.cos(math.radians(self.angle-44)) + self.y),(1.2 * size * math.sin(math.radians(self.angle-45)) + self.x, 1.2 * size * math.cos(math.radians(self.angle-45)) + self.y),(1.1 * size * math.sin(math.radians(self.angle-50)) + self.x, 1.1 * size * math.cos(math.radians(self.angle-50)) + self.y),(1.08 * size * math.sin(math.radians(self.angle-50)) + self.x, 1.08 * size * math.cos(math.radians(self.angle-50)) + self.y),(1.02 * size * math.sin(math.radians(self.angle-54)) + self.x, 1.02 * size * math.cos(math.radians(self.angle-54)) + self.y),(.83 * size * math.sin(math.radians(self.angle-82)) + self.x, .83 * size * math.cos(math.radians(self.angle-82)) + self.y),(.83 * size * math.sin(math.radians(self.angle-98)) + self.x, .83 * size * math.cos(math.radians(self.angle-98)) + self.y),(1.11 * size * math.sin(math.radians(self.angle-130)) + self.x, 1.11 * size * math.cos(math.radians(self.angle-130)) + self.y),(1.17 * size * math.sin(math.radians(self.angle-132)) + self.x, 1.17 * size * math.cos(math.radians(self.angle-132)) + self.y),(1.14 * size * math.sin(math.radians(self.angle-133)) + self.x, 1.14 * size * math.cos(math.radians(self.angle-133)) + self.y),(1.21 * size * math.sin(math.radians(self.angle-135)) + self.x, 1.21 * size * math.cos(math.radians(self.angle-135)) + self.y),(1.27 * size * math.sin(math.radians(self.angle-137)) + self.x, 1.27 * size * math.cos(math.radians(self.angle-137)) + self.y),(1.33 * size * math.sin(math.radians(self.angle-139)) + self.x, 1.33 * size * math.cos(math.radians(self.angle-139)) + self.y),(1.39 * size * math.sin(math.radians(self.angle-141)) + self.x, 1.39 * size * math.cos(math.radians(self.angle-141)) + self.y),(1.46 * size * math.sin(math.radians(self.angle-143)) + self.x, 1.46 * size * math.cos(math.radians(self.angle-143)) + self.y),(1.52 * size * math.sin(math.radians(self.angle-145)) + self.x, 1.52 * size * math.cos(math.radians(self.angle-145)) + self.y),(1.58 * size * math.sin(math.radians(self.angle-147)) + self.x, 1.58 * size * math.cos(math.radians(self.angle-147)) + self.y),(1.64 * size * math.sin(math.radians(self.angle-149)) + self.x, 1.64 * size * math.cos(math.radians(self.angle-149)) + self.y),(1.67 * size * math.sin(math.radians(self.angle-150)) + self.x, 1.67 * size * math.cos(math.radians(self.angle-150)) + self.y),(1.69 * size * math.sin(math.radians(self.angle-149)) + self.x, 1.69 * size * math.cos(math.radians(self.angle-149)) + self.y),(1.81 * size * math.sin(math.radians(self.angle-153)) + self.x, 1.81 * size * math.cos(math.radians(self.angle-153)) + self.y),(1.98 * size * math.sin(math.radians(self.angle-158)) + self.x, 1.98 * size * math.cos(math.radians(self.angle-158)) + self.y),(2.02 * size * math.sin(math.radians(self.angle-159)) + self.x, 2.02 * size * math.cos(math.radians(self.angle-159)) + self.y),(2.04 * size * math.sin(math.radians(self.angle-160)) + self.x, 2.04 * size * math.cos(math.radians(self.angle-160)) + self.y),(2.06 * size * math.sin(math.radians(self.angle-162)) + self.x, 2.06 * size * math.cos(math.radians(self.angle-162)) + self.y),(2.03 * size * math.sin(math.radians(self.angle-168)) + self.x, 2.03 * size * math.cos(math.radians(self.angle-168)) + self.y),(2 * size * math.sin(math.radians(self.angle-180)) + self.x, 2 * size * math.cos(math.radians(self.angle-180)) + self.y)])
        pygame.draw.polygon(screen,(0,0,0),[(.7 * size * math.sin(math.radians(self.angle)) + self.x, .7 * size * math.cos(math.radians(self.angle)) + self.y),(.73 * size * math.sin(math.radians(self.angle+17)) + self.x, .73 * size * math.cos(math.radians(self.angle+17)) + self.y),(.77 * size * math.sin(math.radians(self.angle+27)) + self.x, .77 * size * math.cos(math.radians(self.angle+27)) + self.y),(.83 * size * math.sin(math.radians(self.angle+37)) + self.x, .83 * size * math.cos(math.radians(self.angle+37)) + self.y),(.87 * size * math.sin(math.radians(self.angle+42)) + self.x, .87 * size * math.cos(math.radians(self.angle+42)) + self.y),(.9 * size * math.sin(math.radians(self.angle+47)) + self.x, .9 * size * math.cos(math.radians(self.angle+47)) + self.y),(.88 * size * math.sin(math.radians(self.angle+52)) + self.x, .88 * size * math.cos(math.radians(self.angle+52)) + self.y),(.83 * size * math.sin(math.radians(self.angle+58)) + self.x, .83 * size * math.cos(math.radians(self.angle+58)) + self.y),(.8 * size * math.sin(math.radians(self.angle+61)) + self.x, .8 * size * math.cos(math.radians(self.angle+61)) + self.y),(.82 * size * math.sin(math.radians(self.angle+64)) + self.x, .82 * size * math.cos(math.radians(self.angle+64)) + self.y),(.87 * size * math.sin(math.radians(self.angle+66)) + self.x, .87 * size * math.cos(math.radians(self.angle+66)) + self.y),(.9 * size * math.sin(math.radians(self.angle+68)) + self.x, .9 * size * math.cos(math.radians(self.angle+68)) + self.y),(.92 * size * math.sin(math.radians(self.angle+70)) + self.x, .92 * size * math.cos(math.radians(self.angle+70)) + self.y),(.91 * size * math.sin(math.radians(self.angle+73)) + self.x, .91 * size * math.cos(math.radians(self.angle+73)) + self.y),(.76 * size * math.sin(math.radians(self.angle+67)) + self.x, .76 * size * math.cos(math.radians(self.angle+67)) + self.y),(1.05 * size * math.sin(math.radians(self.angle+138)) + self.x, 1.05 * size * math.cos(math.radians(self.angle+138)) + self.y),(1.15 * size * math.sin(math.radians(self.angle+143)) + self.x, 1.15 * size * math.cos(math.radians(self.angle+143)) + self.y),(1.3 * size * math.sin(math.radians(self.angle+149)) + self.x, 1.3 * size * math.cos(math.radians(self.angle+149)) + self.y),(1.42 * size * math.sin(math.radians(self.angle+153)) + self.x, 1.42 * size * math.cos(math.radians(self.angle+153)) + self.y),(1.51 * size * math.sin(math.radians(self.angle+156)) + self.x, 1.51 * size * math.cos(math.radians(self.angle+156)) + self.y),(1.57 * size * math.sin(math.radians(self.angle+159)) + self.x, 1.57 * size * math.cos(math.radians(self.angle+159)) + self.y),(1.62 * size * math.sin(math.radians(self.angle+163)) + self.x, 1.62 * size * math.cos(math.radians(self.angle+163)) + self.y),(1.64 * size * math.sin(math.radians(self.angle+168)) + self.x, 1.64 * size * math.cos(math.radians(self.angle+168)) + self.y),(1.65 * size * math.sin(math.radians(self.angle+173)) + self.x, 1.65 * size * math.cos(math.radians(self.angle+173)) + self.y),(1.65 * size * math.sin(math.radians(self.angle+180)) + self.x, 1.65 * size * math.cos(math.radians(self.angle+180)) + self.y),(.7 * size * math.sin(math.radians(self.angle)) + self.x, .7 * size * math.cos(math.radians(self.angle)) + self.y),(.73 * size * math.sin(math.radians(self.angle-17)) + self.x, .73 * size * math.cos(math.radians(self.angle-17)) + self.y),(.77 * size * math.sin(math.radians(self.angle-27)) + self.x, .77 * size * math.cos(math.radians(self.angle-27)) + self.y),(.83 * size * math.sin(math.radians(self.angle-37)) + self.x, .83 * size * math.cos(math.radians(self.angle-37)) + self.y),(.87 * size * math.sin(math.radians(self.angle-42)) + self.x, .87 * size * math.cos(math.radians(self.angle-42)) + self.y),(.9 * size * math.sin(math.radians(self.angle-47)) + self.x, .9 * size * math.cos(math.radians(self.angle-47)) + self.y),(.88 * size * math.sin(math.radians(self.angle-52)) + self.x, .88 * size * math.cos(math.radians(self.angle-52)) + self.y),(.83 * size * math.sin(math.radians(self.angle-58)) + self.x, .83 * size * math.cos(math.radians(self.angle-58)) + self.y),(.8 * size * math.sin(math.radians(self.angle-61)) + self.x, .8 * size * math.cos(math.radians(self.angle-61)) + self.y),(.82 * size * math.sin(math.radians(self.angle-64)) + self.x, .82 * size * math.cos(math.radians(self.angle-64)) + self.y),(.87 * size * math.sin(math.radians(self.angle-66)) + self.x, .87 * size * math.cos(math.radians(self.angle-66)) + self.y),(.9 * size * math.sin(math.radians(self.angle-68)) + self.x, .9 * size * math.cos(math.radians(self.angle-68)) + self.y),(.92 * size * math.sin(math.radians(self.angle-70)) + self.x, .92 * size * math.cos(math.radians(self.angle-70)) + self.y),(.91 * size * math.sin(math.radians(self.angle-73)) + self.x, .91 * size * math.cos(math.radians(self.angle-73)) + self.y),(.76 * size * math.sin(math.radians(self.angle-67)) + self.x, .76 * size * math.cos(math.radians(self.angle-67)) + self.y),(1.05 * size * math.sin(math.radians(self.angle-138)) + self.x, 1.05 * size * math.cos(math.radians(self.angle-138)) + self.y),(1.15 * size * math.sin(math.radians(self.angle-143)) + self.x, 1.15 * size * math.cos(math.radians(self.angle-143)) + self.y),(1.3 * size * math.sin(math.radians(self.angle-149)) + self.x, 1.3 * size * math.cos(math.radians(self.angle-149)) + self.y),(1.42 * size * math.sin(math.radians(self.angle-153)) + self.x, 1.42 * size * math.cos(math.radians(self.angle-153)) + self.y),(1.51 * size * math.sin(math.radians(self.angle-156)) + self.x, 1.51 * size * math.cos(math.radians(self.angle-156)) + self.y),(1.57 * size * math.sin(math.radians(self.angle-159)) + self.x, 1.57 * size * math.cos(math.radians(self.angle-159)) + self.y),(1.62 * size * math.sin(math.radians(self.angle-163)) + self.x, 1.62 * size * math.cos(math.radians(self.angle-163)) + self.y),(1.64 * size * math.sin(math.radians(self.angle-168)) + self.x, 1.64 * size * math.cos(math.radians(self.angle-168)) + self.y),(1.65 * size * math.sin(math.radians(self.angle-173)) + self.x, 1.65 * size * math.cos(math.radians(self.angle-173)) + self.y),(1.65 * size * math.sin(math.radians(self.angle-180)) + self.x, 1.65 * size * math.cos(math.radians(self.angle-180)) + self.y)])
        pygame.draw.polygon(screen, (0,0,0), [(1.73 * size * math.sin(math.radians(self.angle+180)) + self.x, 1.73 * size * math.cos(math.radians(self.angle+180)) + self.y),(1.75 * size * math.sin(math.radians(self.angle+171)) + self.x, 1.75 * size * math.cos(math.radians(self.angle+171)) + self.y),(1.82 * size * math.sin(math.radians(self.angle+154)) + self.x, 1.82 * size * math.cos(math.radians(self.angle+154)) + self.y),(1.76 * size * math.sin(math.radians(self.angle+153)) + self.x, 1.76 * size * math.cos(math.radians(self.angle+153)) + self.y),(1.8 * size * math.sin(math.radians(self.angle+153)) + self.x, 1.8 * size * math.cos(math.radians(self.angle+153)) + self.y),(2.03 * size * math.sin(math.radians(self.angle+156)) + self.x, 2.03 * size * math.cos(math.radians(self.angle+156)) + self.y),(1.99 * size * math.sin(math.radians(self.angle+157)) + self.x, 1.99 * size * math.cos(math.radians(self.angle+157)) + self.y),(1.93 * size * math.sin(math.radians(self.angle+173)) + self.x, 1.93 * size * math.cos(math.radians(self.angle+173)) + self.y),(1.92 * size * math.sin(math.radians(self.angle+180)) + self.x, 1.92 * size * math.cos(math.radians(self.angle+180)) + self.y),(1.73 * size * math.sin(math.radians(self.angle-180)) + self.x, 1.73 * size * math.cos(math.radians(self.angle-180)) + self.y),(1.75 * size * math.sin(math.radians(self.angle-171)) + self.x, 1.75 * size * math.cos(math.radians(self.angle-171)) + self.y),(1.82 * size * math.sin(math.radians(self.angle-154)) + self.x, 1.82 * size * math.cos(math.radians(self.angle-154)) + self.y),(1.76 * size * math.sin(math.radians(self.angle-153)) + self.x, 1.76 * size * math.cos(math.radians(self.angle-153)) + self.y),(1.8 * size * math.sin(math.radians(self.angle-153)) + self.x, 1.8 * size * math.cos(math.radians(self.angle-153)) + self.y),(2.03 * size * math.sin(math.radians(self.angle-156)) + self.x, 2.03 * size * math.cos(math.radians(self.angle-156)) + self.y),(1.99 * size * math.sin(math.radians(self.angle-157)) + self.x, 1.99 * size * math.cos(math.radians(self.angle-157)) + self.y),(1.93 * size * math.sin(math.radians(self.angle-173)) + self.x, 1.93 * size * math.cos(math.radians(self.angle-173)) + self.y),(1.92 * size * math.sin(math.radians(self.angle-180)) + self.x, 1.92 * size * math.cos(math.radians(self.angle-180)) + self.y)])


def draw_road():
    # screen.blit(road, (0, 0))
    pygame.draw.rect(screen, (21,198,21), (0,0,110,900))
    pygame.draw.rect(screen, (21,198,21), (790,0,110,900))
    pygame.draw.rect(screen, (31,1,54), (136,0,155,900))
    pygame.draw.rect(screen, (31,1,54), (291,0,160,900))
    pygame.draw.rect(screen, (31,1,54), (451,0,160,900))
    pygame.draw.rect(screen, (31,1,54), (611,0,155,900))
    screen.blit(lines, (0 ,-bgy + 900 * (bgy // 900)))






width = 900
height = 900


pygame.init()
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("My Game")
clock = pygame.time.Clock()
road = pygame.image.load("Road.png")
lines = pygame.image.load("Lines-Borders.png")
borders = pygame.image.load("Borders.png")


size = 40
x = 450
y = 750
car_angle = 180
velx = 0
bgy = 0
bv = 10
timer = 180
bullets = []

while True:
    draw_road()
    pygame.draw.polygon(screen, (0,0,0), [(1.63 * size * math.sin(math.radians(car_angle+34)) + x,1.63 * size * math.cos(math.radians(car_angle+34)) + y),(1.25 * size * math.sin(math.radians(car_angle+47)) + x,1.25 * size * math.cos(math.radians(car_angle+47)) + y),(1.13 * size * math.sin(math.radians(car_angle+41)) + x,1.13 * size * math.cos(math.radians(car_angle+41)) + y),(1.53 * size * math.sin(math.radians(car_angle+28)) + x,1.53 * size * math.cos(math.radians(car_angle+28)) + y)])
    pygame.draw.polygon(screen, (0,0,0), [(1.63 * size * math.sin(math.radians(car_angle-34)) + x,1.63 * size * math.cos(math.radians(car_angle-34)) + y),(1.25 * size * math.sin(math.radians(car_angle-47)) + x,1.25 * size * math.cos(math.radians(car_angle-47)) + y),(1.13 * size * math.sin(math.radians(car_angle-41)) + x,1.13 * size * math.cos(math.radians(car_angle-41)) + y),(1.53 * size * math.sin(math.radians(car_angle-28)) + x,1.53 * size * math.cos(math.radians(car_angle-28)) + y)])
    pygame.draw.polygon(screen, (0,0,0), [(1.25 * size * math.sin(math.radians(car_angle+133)) + x,1.25 * size * math.cos(math.radians(car_angle+133)) + y),(1.63 * size * math.sin(math.radians(car_angle+146)) + x,1.63 * size * math.cos(math.radians(car_angle+146)) + y),(1.56 * size * math.sin(math.radians(car_angle+150)) + x,1.56 * size * math.cos(math.radians(car_angle+150)) + y),(1.15 * size * math.sin(math.radians(car_angle+138)) + x,1.15 * size * math.cos(math.radians(car_angle+138)) + y)])
    pygame.draw.polygon(screen, (0,0,0), [(1.25 * size * math.sin(math.radians(car_angle-133)) + x,1.25 * size * math.cos(math.radians(car_angle-133)) + y),(1.63 * size * math.sin(math.radians(car_angle-146)) + x,1.63 * size * math.cos(math.radians(car_angle-146)) + y),(1.56 * size * math.sin(math.radians(car_angle-150)) + x,1.56 * size * math.cos(math.radians(car_angle-150)) + y),(1.15 * size * math.sin(math.radians(car_angle-138)) + x,1.15 * size * math.cos(math.radians(car_angle-138)) + y)])
    pygame.draw.polygon(screen, (229,0,0), [(2 * size * math.sin(math.radians(car_angle)) + x, 2 * size * math.cos(math.radians(car_angle)) + y),(2 * size * math.sin(math.radians(car_angle+2)) + x, 2 * size * math.cos(math.radians(car_angle+2)) + y),(2 * size * math.sin(math.radians(car_angle+4)) + x, 2 * size * math.cos(math.radians(car_angle+4)) + y),(2 * size * math.sin(math.radians(car_angle+6)) + x, 2 * size * math.cos(math.radians(car_angle+6)) + y),(2 * size * math.sin(math.radians(car_angle+8)) + x, 2 * size * math.cos(math.radians(car_angle+8)) + y),(2 * size * math.sin(math.radians(car_angle+10)) + x, 2 * size * math.cos(math.radians(car_angle+10)) + y),(2 * size * math.sin(math.radians(car_angle+12)) + x, 2 * size * math.cos(math.radians(car_angle+12)) + y),(2 * size * math.sin(math.radians(car_angle+14)) + x, 2 * size * math.cos(math.radians(car_angle+14)) + y),(2 * size * math.sin(math.radians(car_angle+16)) + x, 2 * size * math.cos(math.radians(car_angle+16)) + y),(2 * size * math.sin(math.radians(car_angle+18)) + x, 2 * size * math.cos(math.radians(car_angle+18)) + y),(1.9 * size * math.sin(math.radians(car_angle+23)) + x, 1.9 * size * math.cos(math.radians(car_angle+23)) + y),(1.8 * size * math.sin(math.radians(car_angle+27)) + x, 1.8 * size * math.cos(math.radians(car_angle+27)) + y),(1.7 * size * math.sin(math.radians(car_angle+30)) + x, 1.7 * size * math.cos(math.radians(car_angle+30)) + y),(1.67 * size * math.sin(math.radians(car_angle+31)) + x, 1.67 * size * math.cos(math.radians(car_angle+31)) + y),(1.64 * size * math.sin(math.radians(car_angle+30)) + x, 1.64 * size * math.cos(math.radians(car_angle+30)) + y),(1.6 * size * math.sin(math.radians(car_angle+32)) + x, 1.6 * size * math.cos(math.radians(car_angle+32)) + y),(1.54 * size * math.sin(math.radians(car_angle+34)) + x, 1.54 * size * math.cos(math.radians(car_angle+34)) + y),(1.48 * size * math.sin(math.radians(car_angle+36)) + x, 1.48 * size * math.cos(math.radians(car_angle+36)) + y),(1.42 * size * math.sin(math.radians(car_angle+38)) + x, 1.42 * size * math.cos(math.radians(car_angle+38)) + y),(1.36 * size * math.sin(math.radians(car_angle+40)) + x, 1.36 * size * math.cos(math.radians(car_angle+40)) + y),(1.3 * size * math.sin(math.radians(car_angle+42)) + x, 1.3 * size * math.cos(math.radians(car_angle+42)) + y),(1.24 * size * math.sin(math.radians(car_angle+44)) + x, 1.24 * size * math.cos(math.radians(car_angle+44)) + y),(1.2 * size * math.sin(math.radians(car_angle+45)) + x, 1.2 * size * math.cos(math.radians(car_angle+45)) + y),(1.1 * size * math.sin(math.radians(car_angle+50)) + x, 1.1 * size * math.cos(math.radians(car_angle+50)) + y),(1.08 * size * math.sin(math.radians(car_angle+50)) + x, 1.08 * size * math.cos(math.radians(car_angle+50)) + y),(1.02 * size * math.sin(math.radians(car_angle+54)) + x, 1.02 * size * math.cos(math.radians(car_angle+54)) + y),(.83 * size * math.sin(math.radians(car_angle+82)) + x, .83 * size * math.cos(math.radians(car_angle+82)) + y),(.83 * size * math.sin(math.radians(car_angle+98)) + x, .83 * size * math.cos(math.radians(car_angle+98)) + y),(1.11 * size * math.sin(math.radians(car_angle+130)) + x, 1.11 * size * math.cos(math.radians(car_angle+130)) + y),(1.17 * size * math.sin(math.radians(car_angle+132)) + x, 1.17 * size * math.cos(math.radians(car_angle+132)) + y),(1.14 * size * math.sin(math.radians(car_angle+133)) + x, 1.14 * size * math.cos(math.radians(car_angle+133)) + y),(1.21 * size * math.sin(math.radians(car_angle+135)) + x, 1.21 * size * math.cos(math.radians(car_angle+135)) + y),(1.27 * size * math.sin(math.radians(car_angle+137)) + x, 1.27 * size * math.cos(math.radians(car_angle+137)) + y),(1.33 * size * math.sin(math.radians(car_angle+139)) + x, 1.33 * size * math.cos(math.radians(car_angle+139)) + y),(1.39 * size * math.sin(math.radians(car_angle+141)) + x, 1.39 * size * math.cos(math.radians(car_angle+141)) + y),(1.46 * size * math.sin(math.radians(car_angle+143)) + x, 1.46 * size * math.cos(math.radians(car_angle+143)) + y),(1.52 * size * math.sin(math.radians(car_angle+145)) + x, 1.52 * size * math.cos(math.radians(car_angle+145)) + y),(1.58 * size * math.sin(math.radians(car_angle+147)) + x, 1.58 * size * math.cos(math.radians(car_angle+147)) + y),(1.64 * size * math.sin(math.radians(car_angle+149)) + x, 1.64 * size * math.cos(math.radians(car_angle+149)) + y),(1.67 * size * math.sin(math.radians(car_angle+150)) + x, 1.67 * size * math.cos(math.radians(car_angle+150)) + y),(1.69 * size * math.sin(math.radians(car_angle+149)) + x, 1.69 * size * math.cos(math.radians(car_angle+149)) + y),(1.81 * size * math.sin(math.radians(car_angle+153)) + x, 1.81 * size * math.cos(math.radians(car_angle+153)) + y),(1.98 * size * math.sin(math.radians(car_angle+158)) + x, 1.98 * size * math.cos(math.radians(car_angle+158)) + y),(2.02 * size * math.sin(math.radians(car_angle+159)) + x, 2.02 * size * math.cos(math.radians(car_angle+159)) + y),(2.04 * size * math.sin(math.radians(car_angle+160)) + x, 2.04 * size * math.cos(math.radians(car_angle+160)) + y),(2.06 * size * math.sin(math.radians(car_angle+162)) + x, 2.06 * size * math.cos(math.radians(car_angle+162)) + y),(2.03 * size * math.sin(math.radians(car_angle+168)) + x, 2.03 * size * math.cos(math.radians(car_angle+168)) + y),(2 * size * math.sin(math.radians(car_angle+180)) + x, 2 * size * math.cos(math.radians(car_angle+180)) + y),(2 * size * math.sin(math.radians(car_angle)) + x, 2 * size * math.cos(math.radians(car_angle)) + y),(2 * size * math.sin(math.radians(car_angle-2)) + x, 2 * size * math.cos(math.radians(car_angle-2)) + y),(2 * size * math.sin(math.radians(car_angle-4)) + x, 2 * size * math.cos(math.radians(car_angle-4)) + y),(2 * size * math.sin(math.radians(car_angle-6)) + x, 2 * size * math.cos(math.radians(car_angle-6)) + y),(2 * size * math.sin(math.radians(car_angle-8)) + x, 2 * size * math.cos(math.radians(car_angle-8)) + y),(2 * size * math.sin(math.radians(car_angle-10)) + x, 2 * size * math.cos(math.radians(car_angle-10)) + y),(2 * size * math.sin(math.radians(car_angle-12)) + x, 2 * size * math.cos(math.radians(car_angle-12)) + y),(2 * size * math.sin(math.radians(car_angle-14)) + x, 2 * size * math.cos(math.radians(car_angle-14)) + y),(2 * size * math.sin(math.radians(car_angle-16)) + x, 2 * size * math.cos(math.radians(car_angle-16)) + y),(2 * size * math.sin(math.radians(car_angle-18)) + x, 2 * size * math.cos(math.radians(car_angle-18)) + y),(1.9 * size * math.sin(math.radians(car_angle-23)) + x, 1.9 * size * math.cos(math.radians(car_angle-23)) + y),(1.8 * size * math.sin(math.radians(car_angle-27)) + x, 1.8 * size * math.cos(math.radians(car_angle-27)) + y),(1.7 * size * math.sin(math.radians(car_angle-30)) + x, 1.7 * size * math.cos(math.radians(car_angle-30)) + y),(1.67 * size * math.sin(math.radians(car_angle-31)) + x, 1.67 * size * math.cos(math.radians(car_angle-31)) + y),(1.64 * size * math.sin(math.radians(car_angle-30)) + x, 1.64 * size * math.cos(math.radians(car_angle-30)) + y),(1.6 * size * math.sin(math.radians(car_angle-32)) + x, 1.6 * size * math.cos(math.radians(car_angle-32)) + y),(1.54 * size * math.sin(math.radians(car_angle-34)) + x, 1.54 * size * math.cos(math.radians(car_angle-34)) + y),(1.48 * size * math.sin(math.radians(car_angle-36)) + x, 1.48 * size * math.cos(math.radians(car_angle-36)) + y),(1.42 * size * math.sin(math.radians(car_angle-38)) + x, 1.42 * size * math.cos(math.radians(car_angle-38)) + y),(1.36 * size * math.sin(math.radians(car_angle-40)) + x, 1.36 * size * math.cos(math.radians(car_angle-40)) + y),(1.3 * size * math.sin(math.radians(car_angle-42)) + x, 1.3 * size * math.cos(math.radians(car_angle-42)) + y),(1.24 * size * math.sin(math.radians(car_angle-44)) + x, 1.24 * size * math.cos(math.radians(car_angle-44)) + y),(1.2 * size * math.sin(math.radians(car_angle-45)) + x, 1.2 * size * math.cos(math.radians(car_angle-45)) + y),(1.1 * size * math.sin(math.radians(car_angle-50)) + x, 1.1 * size * math.cos(math.radians(car_angle-50)) + y),(1.08 * size * math.sin(math.radians(car_angle-50)) + x, 1.08 * size * math.cos(math.radians(car_angle-50)) + y),(1.02 * size * math.sin(math.radians(car_angle-54)) + x, 1.02 * size * math.cos(math.radians(car_angle-54)) + y),(.83 * size * math.sin(math.radians(car_angle-82)) + x, .83 * size * math.cos(math.radians(car_angle-82)) + y),(.83 * size * math.sin(math.radians(car_angle-98)) + x, .83 * size * math.cos(math.radians(car_angle-98)) + y),(1.11 * size * math.sin(math.radians(car_angle-130)) + x, 1.11 * size * math.cos(math.radians(car_angle-130)) + y),(1.17 * size * math.sin(math.radians(car_angle-132)) + x, 1.17 * size * math.cos(math.radians(car_angle-132)) + y),(1.14 * size * math.sin(math.radians(car_angle-133)) + x, 1.14 * size * math.cos(math.radians(car_angle-133)) + y),(1.21 * size * math.sin(math.radians(car_angle-135)) + x, 1.21 * size * math.cos(math.radians(car_angle-135)) + y),(1.27 * size * math.sin(math.radians(car_angle-137)) + x, 1.27 * size * math.cos(math.radians(car_angle-137)) + y),(1.33 * size * math.sin(math.radians(car_angle-139)) + x, 1.33 * size * math.cos(math.radians(car_angle-139)) + y),(1.39 * size * math.sin(math.radians(car_angle-141)) + x, 1.39 * size * math.cos(math.radians(car_angle-141)) + y),(1.46 * size * math.sin(math.radians(car_angle-143)) + x, 1.46 * size * math.cos(math.radians(car_angle-143)) + y),(1.52 * size * math.sin(math.radians(car_angle-145)) + x, 1.52 * size * math.cos(math.radians(car_angle-145)) + y),(1.58 * size * math.sin(math.radians(car_angle-147)) + x, 1.58 * size * math.cos(math.radians(car_angle-147)) + y),(1.64 * size * math.sin(math.radians(car_angle-149)) + x, 1.64 * size * math.cos(math.radians(car_angle-149)) + y),(1.67 * size * math.sin(math.radians(car_angle-150)) + x, 1.67 * size * math.cos(math.radians(car_angle-150)) + y),(1.69 * size * math.sin(math.radians(car_angle-149)) + x, 1.69 * size * math.cos(math.radians(car_angle-149)) + y),(1.81 * size * math.sin(math.radians(car_angle-153)) + x, 1.81 * size * math.cos(math.radians(car_angle-153)) + y),(1.98 * size * math.sin(math.radians(car_angle-158)) + x, 1.98 * size * math.cos(math.radians(car_angle-158)) + y),(2.02 * size * math.sin(math.radians(car_angle-159)) + x, 2.02 * size * math.cos(math.radians(car_angle-159)) + y),(2.04 * size * math.sin(math.radians(car_angle-160)) + x, 2.04 * size * math.cos(math.radians(car_angle-160)) + y),(2.06 * size * math.sin(math.radians(car_angle-162)) + x, 2.06 * size * math.cos(math.radians(car_angle-162)) + y),(2.03 * size * math.sin(math.radians(car_angle-168)) + x, 2.03 * size * math.cos(math.radians(car_angle-168)) + y),(2 * size * math.sin(math.radians(car_angle-180)) + x, 2 * size * math.cos(math.radians(car_angle-180)) + y)])
    pygame.draw.polygon(screen,(0,0,0),[(.7 * size * math.sin(math.radians(car_angle)) + x, .7 * size * math.cos(math.radians(car_angle)) + y),(.73 * size * math.sin(math.radians(car_angle+17)) + x, .73 * size * math.cos(math.radians(car_angle+17)) + y),(.77 * size * math.sin(math.radians(car_angle+27)) + x, .77 * size * math.cos(math.radians(car_angle+27)) + y),(.83 * size * math.sin(math.radians(car_angle+37)) + x, .83 * size * math.cos(math.radians(car_angle+37)) + y),(.87 * size * math.sin(math.radians(car_angle+42)) + x, .87 * size * math.cos(math.radians(car_angle+42)) + y),(.9 * size * math.sin(math.radians(car_angle+47)) + x, .9 * size * math.cos(math.radians(car_angle+47)) + y),(.88 * size * math.sin(math.radians(car_angle+52)) + x, .88 * size * math.cos(math.radians(car_angle+52)) + y),(.83 * size * math.sin(math.radians(car_angle+58)) + x, .83 * size * math.cos(math.radians(car_angle+58)) + y),(.8 * size * math.sin(math.radians(car_angle+61)) + x, .8 * size * math.cos(math.radians(car_angle+61)) + y),(.82 * size * math.sin(math.radians(car_angle+64)) + x, .82 * size * math.cos(math.radians(car_angle+64)) + y),(.87 * size * math.sin(math.radians(car_angle+66)) + x, .87 * size * math.cos(math.radians(car_angle+66)) + y),(.9 * size * math.sin(math.radians(car_angle+68)) + x, .9 * size * math.cos(math.radians(car_angle+68)) + y),(.92 * size * math.sin(math.radians(car_angle+70)) + x, .92 * size * math.cos(math.radians(car_angle+70)) + y),(.91 * size * math.sin(math.radians(car_angle+73)) + x, .91 * size * math.cos(math.radians(car_angle+73)) + y),(.76 * size * math.sin(math.radians(car_angle+67)) + x, .76 * size * math.cos(math.radians(car_angle+67)) + y),(1.05 * size * math.sin(math.radians(car_angle+138)) + x, 1.05 * size * math.cos(math.radians(car_angle+138)) + y),(1.15 * size * math.sin(math.radians(car_angle+143)) + x, 1.15 * size * math.cos(math.radians(car_angle+143)) + y),(1.3 * size * math.sin(math.radians(car_angle+149)) + x, 1.3 * size * math.cos(math.radians(car_angle+149)) + y),(1.42 * size * math.sin(math.radians(car_angle+153)) + x, 1.42 * size * math.cos(math.radians(car_angle+153)) + y),(1.51 * size * math.sin(math.radians(car_angle+156)) + x, 1.51 * size * math.cos(math.radians(car_angle+156)) + y),(1.57 * size * math.sin(math.radians(car_angle+159)) + x, 1.57 * size * math.cos(math.radians(car_angle+159)) + y),(1.62 * size * math.sin(math.radians(car_angle+163)) + x, 1.62 * size * math.cos(math.radians(car_angle+163)) + y),(1.64 * size * math.sin(math.radians(car_angle+168)) + x, 1.64 * size * math.cos(math.radians(car_angle+168)) + y),(1.65 * size * math.sin(math.radians(car_angle+173)) + x, 1.65 * size * math.cos(math.radians(car_angle+173)) + y),(1.65 * size * math.sin(math.radians(car_angle+180)) + x, 1.65 * size * math.cos(math.radians(car_angle+180)) + y),(.7 * size * math.sin(math.radians(car_angle)) + x, .7 * size * math.cos(math.radians(car_angle)) + y),(.73 * size * math.sin(math.radians(car_angle-17)) + x, .73 * size * math.cos(math.radians(car_angle-17)) + y),(.77 * size * math.sin(math.radians(car_angle-27)) + x, .77 * size * math.cos(math.radians(car_angle-27)) + y),(.83 * size * math.sin(math.radians(car_angle-37)) + x, .83 * size * math.cos(math.radians(car_angle-37)) + y),(.87 * size * math.sin(math.radians(car_angle-42)) + x, .87 * size * math.cos(math.radians(car_angle-42)) + y),(.9 * size * math.sin(math.radians(car_angle-47)) + x, .9 * size * math.cos(math.radians(car_angle-47)) + y),(.88 * size * math.sin(math.radians(car_angle-52)) + x, .88 * size * math.cos(math.radians(car_angle-52)) + y),(.83 * size * math.sin(math.radians(car_angle-58)) + x, .83 * size * math.cos(math.radians(car_angle-58)) + y),(.8 * size * math.sin(math.radians(car_angle-61)) + x, .8 * size * math.cos(math.radians(car_angle-61)) + y),(.82 * size * math.sin(math.radians(car_angle-64)) + x, .82 * size * math.cos(math.radians(car_angle-64)) + y),(.87 * size * math.sin(math.radians(car_angle-66)) + x, .87 * size * math.cos(math.radians(car_angle-66)) + y),(.9 * size * math.sin(math.radians(car_angle-68)) + x, .9 * size * math.cos(math.radians(car_angle-68)) + y),(.92 * size * math.sin(math.radians(car_angle-70)) + x, .92 * size * math.cos(math.radians(car_angle-70)) + y),(.91 * size * math.sin(math.radians(car_angle-73)) + x, .91 * size * math.cos(math.radians(car_angle-73)) + y),(.76 * size * math.sin(math.radians(car_angle-67)) + x, .76 * size * math.cos(math.radians(car_angle-67)) + y),(1.05 * size * math.sin(math.radians(car_angle-138)) + x, 1.05 * size * math.cos(math.radians(car_angle-138)) + y),(1.15 * size * math.sin(math.radians(car_angle-143)) + x, 1.15 * size * math.cos(math.radians(car_angle-143)) + y),(1.3 * size * math.sin(math.radians(car_angle-149)) + x, 1.3 * size * math.cos(math.radians(car_angle-149)) + y),(1.42 * size * math.sin(math.radians(car_angle-153)) + x, 1.42 * size * math.cos(math.radians(car_angle-153)) + y),(1.51 * size * math.sin(math.radians(car_angle-156)) + x, 1.51 * size * math.cos(math.radians(car_angle-156)) + y),(1.57 * size * math.sin(math.radians(car_angle-159)) + x, 1.57 * size * math.cos(math.radians(car_angle-159)) + y),(1.62 * size * math.sin(math.radians(car_angle-163)) + x, 1.62 * size * math.cos(math.radians(car_angle-163)) + y),(1.64 * size * math.sin(math.radians(car_angle-168)) + x, 1.64 * size * math.cos(math.radians(car_angle-168)) + y),(1.65 * size * math.sin(math.radians(car_angle-173)) + x, 1.65 * size * math.cos(math.radians(car_angle-173)) + y),(1.65 * size * math.sin(math.radians(car_angle-180)) + x, 1.65 * size * math.cos(math.radians(car_angle-180)) + y)])
    pygame.draw.polygon(screen, (0,0,0), [(1.73 * size * math.sin(math.radians(car_angle+180)) + x, 1.73 * size * math.cos(math.radians(car_angle+180)) + y),(1.75 * size * math.sin(math.radians(car_angle+171)) + x, 1.75 * size * math.cos(math.radians(car_angle+171)) + y),(1.82 * size * math.sin(math.radians(car_angle+154)) + x, 1.82 * size * math.cos(math.radians(car_angle+154)) + y),(1.76 * size * math.sin(math.radians(car_angle+153)) + x, 1.76 * size * math.cos(math.radians(car_angle+153)) + y),(1.8 * size * math.sin(math.radians(car_angle+153)) + x, 1.8 * size * math.cos(math.radians(car_angle+153)) + y),(2.03 * size * math.sin(math.radians(car_angle+156)) + x, 2.03 * size * math.cos(math.radians(car_angle+156)) + y),(1.99 * size * math.sin(math.radians(car_angle+157)) + x, 1.99 * size * math.cos(math.radians(car_angle+157)) + y),(1.93 * size * math.sin(math.radians(car_angle+173)) + x, 1.93 * size * math.cos(math.radians(car_angle+173)) + y),(1.92 * size * math.sin(math.radians(car_angle+180)) + x, 1.92 * size * math.cos(math.radians(car_angle+180)) + y),(1.73 * size * math.sin(math.radians(car_angle-180)) + x, 1.73 * size * math.cos(math.radians(car_angle-180)) + y),(1.75 * size * math.sin(math.radians(car_angle-171)) + x, 1.75 * size * math.cos(math.radians(car_angle-171)) + y),(1.82 * size * math.sin(math.radians(car_angle-154)) + x, 1.82 * size * math.cos(math.radians(car_angle-154)) + y),(1.76 * size * math.sin(math.radians(car_angle-153)) + x, 1.76 * size * math.cos(math.radians(car_angle-153)) + y),(1.8 * size * math.sin(math.radians(car_angle-153)) + x, 1.8 * size * math.cos(math.radians(car_angle-153)) + y),(2.03 * size * math.sin(math.radians(car_angle-156)) + x, 2.03 * size * math.cos(math.radians(car_angle-156)) + y),(1.99 * size * math.sin(math.radians(car_angle-157)) + x, 1.99 * size * math.cos(math.radians(car_angle-157)) + y),(1.93 * size * math.sin(math.radians(car_angle-173)) + x, 1.93 * size * math.cos(math.radians(car_angle-173)) + y),(1.92 * size * math.sin(math.radians(car_angle-180)) + x, 1.92 * size * math.cos(math.radians(car_angle-180)) + y)])

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()

    keys = pygame.key.get_pressed()
    if keys[K_LEFT]: 
        velx -= bv / 30
    if keys[K_RIGHT]: 
        velx += bv / 30
    if keys[K_DOWN]:
        y +=  bv / 10
    if keys[K_UP]:
        y -=  bv / 10
        
    if x < 174:
        x = 174 
    if x > 727:
        x = 727
    if y > 820:
        y = 820
    if y < 80:
        y = 80

    bgy -= bv
    bv += .05
    x += velx
    velx *= .85
    car_angle = 180 - velx

    if timer == 0:
        bullets.append(projectile(bv/3,random.randint(1,4),(random.randint(0,255),random.randint(0,255),random.randint(0,255))))
        timer = random.randint(30, 120)
    else:
        timer -= 1

    for bullet in bullets:
        if x > bullet.x - 81 and x < bullet.x + 81 and y < bullet.y + 160 and y > bullet.y - 160:
            pygame.quit()
        bullet.draw()
        bullet.y += bullet.speed





    clock.tick(60)
    pygame.display.flip()

pygame.quit() 